	TSTO #10
	BOV StackOverFlowException
; start main program
; overflow test
	BOV StackOverFlowException
	ADDSP #7
; Generation de la table des methodes
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; generation des classes
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.setNum, R0
	STORE R0, 5(GB)
	LOAD code.A.getNum, R0
	STORE R0, 6(GB)
; Main program
; Declaration des variables:
	NEW #2, R3
	BOV HeapOverFlowException
	LEA 3(GB), R0
	STORE R0, 0(R3)
	PUSH R3
	BSR init.A
	POP R3
	STORE R3, 8(GB)
; Beginning of main instructions:
	TSTO #4
	BOV StackOverflowException
	ADDSP #2
	LOAD #0, R3
	PUSH R3
	LOAD 8(GB), R4
	PUSH R4
	LOAD 0(R4), R4
	BSR 2(R4)
	LOAD R0, R4
	SUBSP #2
	TSTO #3
	BOV StackOverflowException
	ADDSP #1
	LOAD 8(GB), R5
	PUSH R5
	LOAD 0(R5), R5
	BSR 3(R5)
	LOAD R0, R5
	SUBSP #1
	STORE R5, 7(GB)
	LOAD 7(GB), R1
	WINT
	HALT
code.Object.equals:
	LOAD -3(LB), R0
	LOAD -2(LB), R1
	CMP R0, R1
	SEQ R0
	RTS
; fields and methods generation
init.A:
	LOAD -2(LB), R1
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	RTS
	RTS
code.A.setNum:
	LOAD -3(LB), R5
	STORE R5, 1(R4)
	BRA fin.A.setNum
fin.A.setNum:
	RTS
code.A.getNum:
	LOAD -2(LB), R5
	LOAD 1(R5), R5
	LOAD R5, R0
	BRA fin.A.getNum
fin.A.getNum:
	RTS
DivisionByZeroException:
	WSTR "DivisionByZeroException"
	ERROR
IOException:
	WSTR "IOException"
	ERROR
StackOverFlowException:
	WSTR "StackOverflowException"
	ERROR
OverFlowException:
	WSTR "OverFlowException"
	ERROR
HeapOverFlowException:
	WSTR "HeapOverFlowException"
	ERROR
; end main program
